// Compiled by ClojureScript 1.10.597 {}
goog.provide('reagent_movielens_collaborative_filtering.components.explainer');
goog.require('cljs.core');
goog.require('reagent_movielens_collaborative_filtering.helpers.cf');
goog.require('react_loading_skeleton');
goog.require('dataframe_js');
reagent_movielens_collaborative_filtering.components.explainer.global$module$react_loading_skeleton = goog.global["Skeleton"];
reagent_movielens_collaborative_filtering.components.explainer.global$module$dataframe_js = goog.global["DataFrame"];
reagent_movielens_collaborative_filtering.components.explainer.component = (function reagent_movielens_collaborative_filtering$components$explainer$component(movies,ratings){
return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"section","section",-300141526),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"h2","h2",-372662728),"How It Works"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Let's try to recommend a movie!"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"First, let's see if our movies loaded in correctly."], null),(cljs.core.truth_(movies)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"max-height","max-height",-612563804),"40vh",new cljs.core.Keyword(null,"overflow-y","overflow-y",-1436589285),"scroll"], null)], null),(function (){var iter__4582__auto__ = (function reagent_movielens_collaborative_filtering$components$explainer$component_$_iter__45698(s__45699){
return (new cljs.core.LazySeq(null,(function (){
var s__45699__$1 = s__45699;
while(true){
var temp__5735__auto__ = cljs.core.seq.call(null,s__45699__$1);
if(temp__5735__auto__){
var s__45699__$2 = temp__5735__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__45699__$2)){
var c__4580__auto__ = cljs.core.chunk_first.call(null,s__45699__$2);
var size__4581__auto__ = cljs.core.count.call(null,c__4580__auto__);
var b__45701 = cljs.core.chunk_buffer.call(null,size__4581__auto__);
if((function (){var i__45700 = (0);
while(true){
if((i__45700 < size__4581__auto__)){
var movie = cljs.core._nth.call(null,c__4580__auto__,i__45700);
cljs.core.chunk_append.call(null,b__45701,cljs.core.with_meta(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"pre","pre",2118456869),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"display","display",242065432),"inline",new cljs.core.Keyword(null,"margin-right","margin-right",809689658),"1em"], null)], null),(movie["movieId"])], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"display","display",242065432),"inline"], null)], null),(movie["title"])], null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"key","key",-1516042587),(movie["movieId"])], null)));

var G__45702 = (i__45700 + (1));
i__45700 = G__45702;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__45701),reagent_movielens_collaborative_filtering$components$explainer$component_$_iter__45698.call(null,cljs.core.chunk_rest.call(null,s__45699__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__45701),null);
}
} else {
var movie = cljs.core.first.call(null,s__45699__$2);
return cljs.core.cons.call(null,cljs.core.with_meta(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"pre","pre",2118456869),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"display","display",242065432),"inline",new cljs.core.Keyword(null,"margin-right","margin-right",809689658),"1em"], null)], null),(movie["movieId"])], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"display","display",242065432),"inline"], null)], null),(movie["title"])], null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"key","key",-1516042587),(movie["movieId"])], null)),reagent_movielens_collaborative_filtering$components$explainer$component_$_iter__45698.call(null,cljs.core.rest.call(null,s__45699__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4582__auto__.call(null,movies.toCollection());
})()], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,">",">",-555517146),(reagent_movielens_collaborative_filtering.components.explainer.global$module$react_loading_skeleton.prototype["constructor"]),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"count","count",2139924085),(10)], null)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Now, let's take a look at the dataframes."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Here are the first ten entries of the movies:"], null),(cljs.core.truth_(movies)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"pre","pre",2118456869),movies.show((10),true)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,">",">",-555517146),(reagent_movielens_collaborative_filtering.components.explainer.global$module$react_loading_skeleton.prototype["constructor"]),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"count","count",2139924085),(12)], null)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Here are the first ten entries of the ratings:"], null),(cljs.core.truth_(ratings)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"pre","pre",2118456869),ratings.show((10),true)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,">",">",-555517146),(reagent_movielens_collaborative_filtering.components.explainer.global$module$react_loading_skeleton.prototype["constructor"]),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"count","count",2139924085),(12)], null)], null)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"The data used on this page comes from ",new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"href","href",-793805698),"https://grouplens.org/datasets/movielens/latest/"], null),"GroupLens Research's Movielens Latest Small Dataset (9/2018)"], null),". Further, it has been preprocessed to remove all but the 500 most reviewed movies. This allows the calculations ","to run within the browser."], null),(function (){var new_ratings = (new (reagent_movielens_collaborative_filtering.components.explainer.global$module$dataframe_js.prototype["constructor"])([[(0),(1),3.0],[(0),(3),4.0],[(0),(5),2.5],[(0),(7),1.0]],["userId","movieId","rating"]));
return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"<>","<>",1280186386),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Let's come up with some ratings for a hypothetical user 0:"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"pre","pre",2118456869),new_ratings.show((10),true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Here are the same ratings centered by mean:"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"pre","pre",2118456869),reagent_movielens_collaborative_filtering.helpers.cf.center_ratings_user.call(null,new_ratings,(0)).show((10),true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Now, let's try to predict user 0's rating of movie 6."], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"We'll need to calculate cosine similarities between movies. For example, ",(((((movies == null)) || ((ratings == null))))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,">",">",-555517146),(reagent_movielens_collaborative_filtering.components.explainer.global$module$react_loading_skeleton.prototype["constructor"]),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"width","width",-384071477),"10em"], null)], null):reagent_movielens_collaborative_filtering.helpers.cf.calculate_similarity.call(null,ratings,(6),(1))
)," is the cosine similarity between movies 6 and 1. Let's add a column of similarities between each movie ","and movie 6."], null),(((((movies == null)) || ((ratings == null))))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,">",">",-555517146),(reagent_movielens_collaborative_filtering.components.explainer.global$module$react_loading_skeleton.prototype["constructor"]),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"count","count",2139924085),(6)], null)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"pre","pre",2118456869),reagent_movielens_collaborative_filtering.helpers.cf.add_similarity_col.call(null,ratings,(6),reagent_movielens_collaborative_filtering.helpers.cf.center_ratings_user.call(null,new_ratings,(0))).show((10),true)], null)
),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Since the number of ratings we have to work with is small, let's use a neighborhood ","of two items. When we take the mean of user 0's ratings of the two movies most similar ","to movie 6, movies 1 and 7, we get a predicted rating of ",(((((movies == null)) || ((ratings == null))))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,">",">",-555517146),(reagent_movielens_collaborative_filtering.components.explainer.global$module$react_loading_skeleton.prototype["constructor"]),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"width","width",-384071477),"5em"], null)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"<>","<>",1280186386),reagent_movielens_collaborative_filtering.helpers.cf.predict_rating.call(null,ratings,(6),reagent_movielens_collaborative_filtering.helpers.cf.center_ratings_user.call(null,new_ratings,(0)),(2))], null)
),"! That's the gist of how item-based collaborative filtering produces ratings."], null)], null);
})()], null);
});

//# sourceMappingURL=explainer.js.map?rel=1585791759768
